

# The names of the final c4gh output files and the mapping input.c4gh ->
# output.c4gh is generated by this gen_rename_index rule.  Since parts of the
# DAG depend on these mappings, we mark this rule as a "checkpoint", so that
# its output can be used to generate/re-evaluate the DAG.
checkpoint gen_rename_index:
    """
    The workflow renames the files to be sent to uuid4 values.
    This rule generates the index for the dataset to be sent, mapping
    new random name to the original name.
    Index format:  one file per line; each line has the following tab-separated fields
        new name <tab> original name\n
    """
    output:
        index = "base_index.tsv"
    params:
        source_items = lambda _: [ str(path) for path in source_files ]
        source_ext = source_ext
    run:
        "scripts/gen_rename_index.py"


def aggregate_new_item_names():
    """
    Returns a list with all the output (uuid) file names
    from the index generated by checkpoint rule gen_rename_index.
    """
    with checkpoints.gen_rename_index.get().output.index.open() as f:
        return [ line.split("\t", 1)[0] for line in f ]


rule final_index:
    """
    Creates the final data index by adding a new column to the base_index.
    The new column contains the checksums of the new, reencrypted files.

    Line order remains as in base_index, so the file is sorted by the first
    column (new randomly generated file name).
    """
    input:
        base_index = checkpoint.gen_rename_index.output.index
        data_files = expand("reencrypted/{filename}.sha", aggregate_new_item_names())
    output:
        index = "index.tsv"
    run:
        with open(input.base_index) as base_index,
            open(output.index, 'w') as final_index:
            for line in base_index:
                rnd_name, original_name = line.rstrip('\n').split('\t')
                chksum_path = f"reencrypted/{rnd_name}.sha"
                with open(chksum_path) as chk_file:
                    chksum_value = chk_file.read().split('\t', 1)[0]
                new_index_line = f"{rnd_name}\t{original_name}\t{chksum_value}\n"
                final_index.write(new_index_line)
